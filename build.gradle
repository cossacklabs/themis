import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.3'
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"
    
    defaultConfig {
    	minSdkVersion 16
    }
    
    sourceSets {
    	main {
    		java.srcDirs = ['src/wrappers/themis/java']
    		manifest.srcFile 'src/wrappers/themis/android/AndroidManifest.xml'
    		jniLibs.srcDirs = ['libs']
    	}
    	androidTest.setRoot('tests/themis/wrappers/android')
        androidTest.java.srcDirs = ['tests/themis/wrappers/android']
        androidTest.manifest.srcFile 'tests/themis/wrappers/android/AndroidManifest.xml'

	}

    task ndkBuild(type: Exec) {
	workingDir 'jni'
        commandLine getNdkBuildCmd() 
	if (project.hasProperty('boringssl_path')){
	    args = ["BORINGSSL_PATH=$boringssl_path"]
	}
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }

    task cleanNative(type: Exec) {
		workingDir 'jni'
        commandLine getNdkBuildCmd(), 'clean'
    }

    clean.dependsOn cleanNative
}

def getNdkDir() {
    if (System.env.ANDROID_NDK_ROOT != null)
        return System.env.ANDROID_NDK_ROOT
        
    throw new GradleException("NDK location not found. Define location with an ANDROID_NDK_ROOT environment variable.")
}

def getNdkBuildCmd() {
    def ndkbuild = getNdkDir() + "/ndk-build"
    if (Os.isFamily(Os.FAMILY_WINDOWS))
        ndkbuild += ".cmd"

    return ndkbuild
}
