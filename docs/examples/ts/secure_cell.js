"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var jsthemis_1 = require("jsthemis");
var message = Buffer.from('Test Message Please Ignore', 'utf-8');
var context = Buffer.from('Secure Cell example code', 'utf-8');
var master_key = Buffer.from('bm8sIHRoaXMgaXMgbm90IGEgdmFsaWQgbWFzdGVyIGtleQ==', 'base64');
var passphrase = 'My Litte Secret: Passphrase Is Magic';
console.log('# Secure Cell in Seal mode\n');
console.log('## Master key API\n');
var scellMK = jsthemis_1.SecureCellSeal.withKey(master_key);
var encrypted_message = scellMK.encrypt(message);
console.log('Encrypted: ' + Buffer.from(encrypted_message).toString('base64'));
var decrypted_message = scellMK.decrypt(encrypted_message);
console.log('Decrypted: ' + Buffer.from(decrypted_message).toString());
console.log();
var encrypted_message2 = Buffer.from('AAEBQAwAAAAQAAAAEQAAAC0fCd2mOIxlDUORXz8+qCKuHCXcDii4bMF8OjOCOqsKEdV4+Ga2xTHPMupFvg==', 'base64');
var decrypted_message2 = scellMK.decrypt(encrypted_message2);
console.log('Decrypted (simulator): ' + Buffer.from(decrypted_message2).toString());
console.log();
console.log('## Passphrase API\n');
var scellPW = jsthemis_1.SecureCellSeal.withPassphrase(passphrase);
var encrypted_message3 = scellPW.encrypt(message);
console.log('Encrypted: ' + Buffer.from(encrypted_message3).toString('base64'));
var decrypted_message3 = scellPW.decrypt(encrypted_message3);
console.log('Decrypted: ' + Buffer.from(decrypted_message3).toString());
console.log();
console.log('# Secure Cell in Token Protect mode\n');
var scellTP = jsthemis_1.SecureCellTokenProtect.withKey(master_key);
var encrypted_message4 = scellTP.encrypt(message);
console.log('Encrypted:  ' + Buffer.from(encrypted_message4.data).toString('base64'));
console.log('Auth token: ' + Buffer.from(encrypted_message4.token).toString('base64'));
var decrypted_message4 = scellTP.decrypt(encrypted_message4.data, encrypted_message4.token);
console.log('Decrypted:  ' + Buffer.from(decrypted_message4).toString());
console.log('');
console.log('# Secure Cell in Context Imprint mode\n');
var scellCI = jsthemis_1.SecureCellContextImprint.withKey(master_key);
var encrypted_message5 = scellCI.encrypt(message, context);
console.log('Encrypted: ' + Buffer.from(encrypted_message5).toString('base64'));
var decrypted_message5 = scellCI.decrypt(encrypted_message5, context);
console.log('Decrypted: ' + Buffer.from(decrypted_message5).toString());
console.log('');
console.log('SecureCell example code finished');
console.log('# Secure Cell in Token Protect mode 2\n');
var scellTP2 = new jsthemis_1.SecureCellTokenProtect(master_key);
var encrypted_message6 = scellTP2.encrypt(message);
console.log('Encrypted:  ' + Buffer.from(encrypted_message6.data).toString('base64'));
console.log('Auth token: ' + Buffer.from(encrypted_message6.token).toString('base64'));
var decrypted_message6 = scellTP.decrypt(encrypted_message6.data, encrypted_message6.token);
console.log('Decrypted:  ' + Buffer.from(decrypted_message6).toString());
console.log('');
